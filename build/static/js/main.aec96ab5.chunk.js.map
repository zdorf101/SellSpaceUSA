{"version":3,"sources":["api/index.js","components/Register.js","components/Nav.js","components/PostForm.js","components/Posts.js","components/Profile.js","components/Post.js","index.js"],"names":["api","url","method","token","body","options","toUpperCase","headers","JSON","stringify","fetch","BASE_URL","res","json","data","error","console","Register","action","setToken","setUserData","useState","username","setUsername","password","setPassword","title","history","useHistory","handleSubmit","event","preventDefault","user","localStorage","setItem","push","id","className","onSubmit","type","placeholder","value","onChange","target","Nav","isAuth","setIsAuth","useEffect","getItem","to","style","fontSize","onClick","removeItem","PostForm","setPosts","posts","postId","useParams","description","price","location","willDeliver","newPostData","setNewPostData","edit","API_URL","post","filteredPosts","filter","_id","handleChange","property","checked","width","Posts","userData","searchTerm","setSearchTerm","postsToDisplay","searchTermLower","toLowerCase","toMatch","author","i","length","includes","postMatches","remainingPosts","map","border","padding","textAlign","Profile","messages","message","fromUser","content","Post","find","setContent","handleMessage","log","App","fetchUserData","fetchPosts","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aec96ab5.chunk.js","sourcesContent":["export const BASE_URL = 'https://strangers-things.herokuapp.com/api/';\nexport const COHORT_NAME = '2202-ftb-pt-web-pt';\nexport const API_URL = BASE_URL + COHORT_NAME;\n\nexport const api = async ({ url, method, token, body }) => {\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    };\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    }\n    const res = await fetch(API_URL + url, options);\n    const data = await res.json();\n    if (data.error) throw data.error;\n    return data;\n  } catch (error) {\n    console.error({ error });\n  }\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { api } from '../api';\n\nconst Register = ({ action, setToken, setUserData }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const isAuth = action === 'login';\n  const title = isAuth ? 'Login' : 'Register';\n  const history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = await api({\n      url: `/users/${action}`,\n      body: { user: { username, password } },\n      method: 'POST',\n    });\n    const token = data?.data?.token;\n    if (token) {\n      localStorage.setItem('token', token);\n      setUsername('');\n      setPassword('');\n      setToken(token);\n      history.push('/');\n    }\n  };\n  return (\n    <div id='register-fields'>\n      <h4 className='page-title'>{title}</h4>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Username'\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <input\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <button type='submit'>\n          {action === 'register' ? 'Register' : 'Login'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Nav.css';\n\nconst Nav = ({ token }) => {\n  const [isAuth, setIsAuth] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      setIsAuth(true);\n    } else {\n      setIsAuth(false);\n    }\n  }, [token]);\n\n  return (\n    <>\n      <div className='navbar'>\n        <div id='nav-links'>\n          <span>\n            <Link to='/posts' style={{ fontSize: '40px' }}>\n              Items for Sale\n            </Link>\n          </span>\n          <div>\n            {isAuth ? (\n              <div style={{ fontSize: '40px' }}>\n                <span>\n                  <Link to='/posts/new' style={{ fontSize: '40px' }}>\n                    Add a Post\n                  </Link>\n                </span>\n                <span>\n                  <Link to='/profile' style={{ fontSize: '40px' }}>\n                    Profile\n                  </Link>\n                </span>\n                <span>\n                  <Link\n                    to='/'\n                    onClick={() => {\n                      localStorage.removeItem('token');\n                      setIsAuth(false);\n                    }}\n                    style={{ fontSize: '40px' }}\n                  >\n                    Logout\n                  </Link>\n                </span>\n              </div>\n            ) : (\n              <div>\n                <div className='auth'>\n                  <span>\n                    <Link to='/login' style={{ fontSize: '40px' }}>\n                      Login\n                    </Link>\n                  </span>\n                  <span>\n                    <Link to='/register' style={{ fontSize: '40px' }}>\n                      Register\n                    </Link>\n                  </span>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { api } from '../api';\n\nconst PostForm = ({ token, setPosts, posts, action }) => {\n\tconst history = useHistory();\n\tconst { postId } = useParams();\n\tconst [newPostData, setNewPostData] = useState({\n\t\ttitle: '',\n\t\tdescription: '',\n\t\tprice: '',\n\t\tlocation: '',\n\t\twillDeliver: false,\n\t});\n\tconst edit = action === 'edit';\n\tconst title = edit ? 'Edit This Post' : 'Add a New Post';\n\tconst method = edit ? 'PATCH' : 'POST';\n\tconst API_URL = edit ? `/posts/${postId}` : `/posts`;\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { post },\n\t\t\t} = await api({\n\t\t\t\turl: API_URL,\n\t\t\t\tmethod: method,\n\t\t\t\tbody: {\n\t\t\t\t\tpost: {\n\t\t\t\t\t\ttitle: newPostData.title,\n\t\t\t\t\t\tdescription: newPostData.description,\n\t\t\t\t\t\tprice: newPostData.price,\n\t\t\t\t\t\tlocation: newPostData.location,\n\t\t\t\t\t\twillDeliver: newPostData.willDeliver,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttoken,\n\t\t\t});\n\n\t\t\tif (edit) {\n\t\t\t\tconst filteredPosts = posts.filter((post) => post._id !== postId);\n\t\t\t\tsetPosts([...filteredPosts, post]);\n\t\t\t} else {\n\t\t\t\tsetPosts([...posts, post]);\n\t\t\t}\n\t\t\thistory.push('/posts');\n\t\t} catch (error) {\n\t\t\tconsole.error('Error adding your post:', error);\n\t\t}\n\t};\n\n\tconst handleChange = (property) => (event) => {\n\t\tif (property === 'willDeliver') {\n\t\t\tsetNewPostData({ ...newPostData, [property]: event.target.checked });\n\t\t} else {\n\t\t\tsetNewPostData({ ...newPostData, [property]: event.target.value });\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h2>{title}</h2>\n\t\t\t<form id='new-post-form' onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='What are you selling?'\n\t\t\t\t\tonChange={handleChange('title')}\n\t\t\t\t\tvalue={newPostData.title}\n\t\t\t\t></input>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Describe the item (i.e. condition, model)'\n\t\t\t\t\tonChange={handleChange('description')}\n\t\t\t\t\tvalue={newPostData.description}\n\t\t\t\t></input>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder=\"What's the price?\"\n\t\t\t\t\tonChange={handleChange('price')}\n\t\t\t\t\tvalue={newPostData.price}\n\t\t\t\t></input>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Where is the item located?'\n\t\t\t\t\tonChange={handleChange('location')}\n\t\t\t\t\tvalue={newPostData.location}\n\t\t\t\t></input>\n\t\t\t\t<label>\n\t\t\t\t\tAre you willing to deliver?\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\tonChange={handleChange('willDeliver')}\n\t\t\t\t\t\tvalue={newPostData.willDeliver}\n\t\t\t\t\t></input>\n\t\t\t\t</label>\n\n\t\t\t\t<button style={{ width: '50%' }}>{title}</button>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n\nexport default PostForm;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { api } from '../api';\n\nconst method = 'DELETE';\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: { username },\n  } = post;\n\n  const toMatch = [description, location, title, username];\n\n  for (let i = 0; i < toMatch.length; i++) {\n    const field = toMatch[i];\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = ({ posts, token, setPosts, userData }) => {\n  const history = useHistory();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const postsToDisplay = posts.filter((post) => postMatches(post, searchTerm));\n\n  const handleSubmit = async (event, postId) => {\n    const API_URL = `/posts/${postId}`;\n    event.preventDefault();\n    try {\n      await api({\n        url: API_URL,\n        method: method,\n        token: token,\n      });\n      const remainingPosts = posts.filter((post) => post._id !== postId);\n      setPosts(remainingPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div id='posts-nav'>\n        <h2 className='page-title'>Posts</h2>\n        <input\n          type='text'\n          placeholder='Search Posts'\n          value={searchTerm}\n          onChange={(event) => {\n            setSearchTerm(event.target.value);\n          }}\n        ></input>\n      </div>\n      {postsToDisplay.length ? (\n        postsToDisplay.map((post) => (\n          <div\n            className='post-info'\n            key={post._id}\n            style={{\n              border: '2px solid blue',\n              padding: '30px',\n              textAlign: 'center',\n            }}\n          >\n            <div id='title-button'>\n              <span className='post-title' style={{ textAlign: 'center' }}>\n                {post.title}\n              </span>\n              <button onClick={() => history.push(`/posts/${post._id}`)}>\n                More Info!\n              </button>\n            </div>\n            <div id='seller'>Seller: {post.author.username}</div>\n            <div className='location'>Location: {post.location}</div>\n            <div className='description'>Description: {post.description}</div>\n\n            {post.author.username === userData.username ? (\n              <button onClick={() => handleSubmit(post._id)}>\n                Delete Post\n              </button>\n            ) : null}\n          </div>\n        ))\n      ) : (\n        <div>\n          <h1>There are no matching posts...</h1>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n","import React, { useEffect, useState } from 'react';\nimport { api } from '../api';\n\nconst Profile = ({ userData, token }) => {\n  const API_URL = `/users/me`;\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    setPosts(userData.posts);\n  }, [userData]);\n\n  const handleSubmit = async (event, postId) => {\n    const API_URL = `/posts/${postId}`;\n    event.preventDefault();\n    try {\n      await api({\n        url: API_URL,\n        method: 'delete',\n        token: token,\n      });\n      const remainingPosts = posts.filter((post) => post._id !== postId);\n      setPosts(remainingPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <h1 className='page-title'>{userData.username}</h1>\n      <div className='profile-body'>\n        {userData.messages && userData.messages.length ? (\n          <div>\n            <div id='inbox-span'>\n              <h3 id='inbox'>Inbox ({userData.messages.length})</h3>\n\n              {userData.messages.map((message) => {\n                return (\n                  <div id='message' key={message._id}>\n                    <label id='sender'>{message.fromUser.username}</label>\n                    <p id='message-content'>{message.content}</p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <h3>There are no messages to display</h3>\n        )}\n        {posts && posts.length ? (\n          <div id='user-posts'>\n            <h2>Listings you've created: </h2>\n            {posts.map((post) => {\n              return (\n                <div key={post._id} style={{ border: '1px solid black' }}>\n                  <h5>{post.title}</h5>\n                  <div>Posted by: {post.author.username}</div>\n                  <div>Description: {post.description}</div>\n                  <div>Location: {post.location}</div>\n                  <button onClick={() => handleSubmit(post._id)}>\n                    Delete Post\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <h2>You haven't created any posts yet.</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { api } from '../api';\n\nconst Post = ({ posts, token }) => {\n\tconst { postId } = useParams();\n\tconst post = posts.find((post) => postId === post._id);\n\tconst [content, setContent] = useState('');\n\n\tconst handleMessage = async (event) => {\n\t\tconst API_URL = `/posts/${postId}/messages`;\n\t\tconsole.log('postId' + postId);\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tawait api({\n\t\t\t\turl: API_URL,\n\t\t\t\tmethod: 'post',\n\t\t\t\ttoken: token,\n\t\t\t\tbody: {\n\t\t\t\t\tmessage: {\n\t\t\t\t\t\tcontent: content,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\tconsole.log('DONE!');\n\t\t} catch (error) {\n\t\t\tconsole.error('Error sending a message');\n\t\t}\n\t};\n\treturn (\n\t\t<div id='post'>\n\t\t\t{post ? (\n\t\t\t\t<div className='post-info'>\n\t\t\t\t\t<h3 className='post-title'>{post.title}</h3>\n\t\t\t\t\t<button>Message Seller</button>\n\t\t\t\t\t<p id='seller'>Seller: {post.author.username}</p>\n\t\t\t\t\t<p className='location'>Location: {post.location}</p>\n\t\t\t\t\t<p className='description'>Price: {post.price}</p>\n\t\t\t\t\t<p>Delivers: {post.willDeliver ? 'Yes' : 'No'}</p>\n\t\t\t\t\t<Link to='/posts/{post._id}/edit'>Edit This Post</Link>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n\t\t\t<form id='message-form' onSubmit={handleMessage}>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Type your message...'\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tsetContent(event.target.value);\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={content}\n\t\t\t\t></input>\n\t\t\t\t<button onClick={handleMessage}>Send Message</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default Post;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { api } from './api';\nimport {\n  Register,\n  Nav,\n  PostForm,\n  Posts,\n  Profile,\n  Post,\n  Login,\n} from './components';\nimport './style.css';\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  const [userData, setUserData] = useState({});\n  const [posts, setPosts] = useState([]);\n\n  const fetchUserData = async (token) => {\n    const { data } = await api({\n      url: '/users/me',\n      token,\n    });\n    return data;\n  };\n\n  const fetchPosts = async () => {\n    const {\n      data: { posts },\n    } = await api({\n      url: '/posts',\n    });\n    return posts;\n  };\n\n  useEffect(async () => {\n    // const posts = await fetchPosts();\n    // setPosts(posts);\n    if (!token) {\n      setToken(localStorage.getItem('token'));\n      return;\n    }\n    const data = await fetchUserData(token);\n    if (data && data.username) {\n      setUserData(data);\n    }\n  }, [token]);\n\n  useEffect(async () => {\n    const posts = await fetchPosts();\n    setPosts(posts);\n  }, []);\n\n  return (\n    <>\n      <div id='header'>\n        {userData.username && <p id='header'>Welcome {userData.username}</p>}\n        {!userData.username && (\n          <p>\n            {' '}\n            <span id='header'>SellSpaceUSA</span>\n          </p>\n        )}\n      </div>\n      <Nav token={token} />\n\n      <Switch>\n        <Route exact path='/'></Route>\n\n        <Route exact path='/posts'>\n          <Posts\n            posts={posts}\n            token={token}\n            setPosts={setPosts}\n            userData={userData}\n          />\n        </Route>\n        <Route path='/profile'>\n          <Profile userData={userData} token={token} />\n        </Route>\n        <Route path='/posts/new'>\n          <PostForm\n            token={token}\n            setPosts={setPosts}\n            posts={posts}\n            action='add'\n          />\n        </Route>\n        <Route path='/posts/:postId/edit'>\n          <PostForm\n            token={token}\n            setPosts={setPosts}\n            posts={posts}\n            action='edit'\n          />\n        </Route>\n        <Route path='/posts/:postId'>\n          <Post posts={posts} token={token} />\n        </Route>\n        <Route path='/register'>\n          <Register\n            action='register'\n            setToken={setToken}\n            setUserData={setUserData}\n          />\n        </Route>\n        <Route path='/login'>\n          <Register\n            action='login'\n            setToken={setToken}\n            setUserData={setUserData}\n          />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}